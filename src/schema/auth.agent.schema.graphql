type Query {
  listAgents: [Agent]
  getAgent(id: ID!): Agent!
}

type Mutation {
  createAgent(input: AgentInput!): CreateAgentResponse
  agentLogin(input: agentLoginInput!): CommonResponse
  agentVerifyOtp(input: verifyOtpInput!): verifyOtpResponse
}

type CommonResponse {
  message: String
  status: String
}

type verifyOtpResponse {
  message: String
  token: String
  status: String
}

input agentLoginInput {
  mobileNumber: String!
}

input verifyOtpInput {
  mobileNumber: String!
  otp: String!
}

type Agent {
  id: ID
  name: String
  mobileNumber: String
  dob: String
  address: String
  postOffice: String
  pincode: String
  district: String
  state: String
  country: String
  punchayathMunicipality: String
  wardNumber: String
  cdsName: String
  photo: String
  agentID: String
}

input AgentInput {
  name: String!
  mobileNumber: String!
  dob: String!
  address: String!
  postOffice: String!
  pincode: String!
  district: String!
  state: String!
  country: String!
  punchayathMunicipality: String!
  wardNumber: String!
  cdsName: String
  photo: String!
}

type CreateAgentResponse {
  message: String!
  token: String!
  agent: Agent
}
